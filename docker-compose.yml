version: "3.9"
services:
  ugc-fastapi:
    container_name: ugc-fastapi
    build:
      context: ./ugc_service
      dockerfile: Dockerfile
    env_file:
      - environments/ugc_service
    volumes:
      - ./ugc_service:/ugc_service
    environment:
      - AUTHJWT_SECRET_KEY=${JWT_SECRET_KEY}
    depends_on:
      ugc-kafka:
        condition: service_healthy

  ugc-etl:
    container_name: ugc-etl
    build:
      context: ./ugc_etl_kafka_click
      dockerfile: Dockerfile
    env_file:
      - environments/ugc_etl_kafka_click

  log_logstash:
    image: logstash:7.10.1
    environment:
      XPACK_MONITORING_ENABLED: "false"
      ES_HOST: "log-elasticsearch:9200"
    ports:
      - "5044:5044/udp"
    volumes:
      - ./logstash/logstash.conf:/config/logstash.conf:ro
    command: logstash -f /config/logstash.conf

  log-elasticsearch:
    image: elasticsearch:7.17.8
    environment:
      discovery.type: single-node
      ES_JAVA_OPTS: "-Xms2048m -Xmx2048m"
    ports:
      - 9200:9200
    volumes:
      - log_esdata:/tmp/elasticsearch/data  

  log_kibana:
    image: kibana:7.17.10
    environment: 
      ELASTICSEARCH_HOSTS: '["http://log-elasticsearch:9200"]'
    ports:
      - 5601:5601
    depends_on:
      - log-elasticsearch

  jaeger:
    container_name: jaeger
    image: jaegertracing/all-in-one:1.42
    environment:
      - QUERY_BASE_PATH=/jaeger
      - SPAN_STORAGE_TYPE=badger
      - BADGER_EPHEMERAL=false
      - BADGER_DIRECTORY_VALUE=/badger/data
      - BADGER_DIRECTORY_KEY=/badger/key
    volumes:
      - jaeger_data:/badger
    expose:
      - "16686"
      - "6831/udp"
  
  ugc-kafka-zookeeper:
    image: confluentinc/cp-zookeeper:7.3.3
    hostname: ugc-kafka-zookeeper
    container_name: ugc-kafka-zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    restart: always

  ugc-kafka:
    image: confluentinc/cp-kafka:7.3.3
    container_name: ugc-kafka
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server ugc-kafka:9092 --list"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s
    depends_on:
      - ugc-kafka-zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'ugc-kafka-zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://ugc-kafka:9092,PLAINTEXT_INTERNAL://ugc-kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    restart: always

  ugc-clickhouse-zookeeper:
    image: zookeeper:3.5
    container_name: ugc-clickhouse-zookeeper
    hostname: ugc-clickhouse-zookeeper
    healthcheck:
      test: nc -z localhost 2181 || exit -1
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  ugc-clickhouse-node1:
    image: yandex/clickhouse-server:20.4
    container_name: ugc-clickhouse-node1
    hostname: ugc-clickhouse-node1
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - ./ch_config/node1:/etc/clickhouse-server
      - ./ch_config/sql/node1.sql:/docker-entrypoint-initdb.d/init.sql
    depends_on:
      ugc-clickhouse-zookeeper:
        condition: service_healthy

  ugc-clickhouse-node2:
    image: yandex/clickhouse-server:20.4
    container_name: ugc-clickhouse-node2
    hostname: ugc-clickhouse-node2
    volumes:
      - ./ch_config/node2:/etc/clickhouse-server
    depends_on:
      ugc-clickhouse-zookeeper:
        condition: service_healthy

  ugc-clickhouse-node3:
    image: yandex/clickhouse-server:20.4
    container_name: ugc-clickhouse-node3
    hostname: ugc-clickhouse-node3
    volumes:
      - ./ch_config/node3:/etc/clickhouse-server
      - ./ch_config/sql/node3.sql:/docker-entrypoint-initdb.d/init.sql
    depends_on:
      ugc-clickhouse-zookeeper:
        condition: service_healthy

  ugc-clickhouse-node4:
    image: yandex/clickhouse-server:20.4
    container_name: ugc-clickhouse-node4
    hostname: ugc-clickhouse-node4
    volumes:
      - ./ch_config/node4:/etc/clickhouse-server
    depends_on:
      ugc-clickhouse-zookeeper:
        condition: service_healthy

volumes:
  ch_config:
  log_esdata:
  jaeger_data: