version: '3.9'
services:
  ugc:
    container_name: ugc
    build:
      context: ./ugc_service
      dockerfile: Dockerfile
    env_file:
      - environments/ugc_service
    depends_on:
      kafka:
        condition: service_healthy

  ugc_etl_kafka_click:
    container_name: ugc_etl_kafka_click
    build:
      context: ./ugc_etl_kafka_click
      dockerfile: Dockerfile
    env_file:
      - environments/ugc_etl_kafka_click

  kafka-zookeeper:
    image: confluentinc/cp-zookeeper:7.3.3
    hostname: kafka-zookeeper
    container_name: kafka-zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    restart: always

  kafka:
    image: confluentinc/cp-kafka:7.3.3
    container_name: kafka
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server kafka:9092 --list"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s
    depends_on:
      - kafka-zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'kafka-zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    restart: always

  clickhouse-zookeeper:
    image: zookeeper:3.5
    container_name: clickhouse-zookeeper
    hostname: clickhouse-zookeeper
    healthcheck:
      test: nc -z localhost 2181 || exit -1
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  clickhouse-node1:
    image: yandex/clickhouse-server:20.4
    container_name: clickhouse-node1
    hostname: clickhouse-node1
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - ./ch_config/node1:/etc/clickhouse-server
      - ./ch_config/sql/node1.sql:/docker-entrypoint-initdb.d/init.sql
    depends_on:
      clickhouse-zookeeper:
        condition: service_healthy

  clickhouse-node2:
    image: yandex/clickhouse-server:20.4
    container_name: clickhouse-node2
    hostname: clickhouse-node2
    volumes:
      - ./ch_config/node2:/etc/clickhouse-server
    depends_on:
      clickhouse-zookeeper:
        condition: service_healthy

  clickhouse-node3:
    image: yandex/clickhouse-server:20.4
    container_name: clickhouse-node3
    hostname: clickhouse-node3
    volumes:
      - ./ch_config/node3:/etc/clickhouse-server
      - ./ch_config/sql/node3.sql:/docker-entrypoint-initdb.d/init.sql
    depends_on:
      clickhouse-zookeeper:
        condition: service_healthy

  clickhouse-node4:
    image: yandex/clickhouse-server:20.4
    container_name: clickhouse-node4
    hostname: clickhouse-node4
    volumes:
      - ./ch_config/node4:/etc/clickhouse-server
    depends_on:
      clickhouse-zookeeper:
        condition: service_healthy

volumes:
  ch_config: